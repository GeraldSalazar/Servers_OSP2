
int listen(int sockfd, int backlog);
    -> marks the socket referred to by sockfd as a passive socket, that is, as a socket that will be used to accept incoming
connection requests using accept(2).
    -> The backlog argument defines the maximum length to which the queue of pending connections for sockfd may grow.

By returning a new socket descriptor for each accepted connection, the server can handle multiple client connections simultaneously. Each client connection is associated with a unique socket descriptor, which can be used to send and receive data independently of the other connections.

The new socket descriptor represents the connection between the server and the client, whereas the original socket descriptor represents the listening socket.

Creating a server in C using sockets involves a few steps:

    Create a socket: Create a socket using the socket() function. This will create a socket descriptor.

    Bind the socket: Bind the socket to a specific IP address and port number using the bind() function.

    Listen for incoming connections: Call the listen() function to make the server listen for incoming connections.

    Accept incoming connections: When a client tries to connect to the server, the server uses the accept() function to accept the incoming connection and create a new socket descriptor for the client.

    Communicate with the client: Once a connection is established, the server can communicate with the client using the new socket descriptor.